syntax = "proto3";

package shopper.checkout_v1;

import "validate/validate.proto";

option go_package = "github.com/offluck/shopper/checkout/pkg/checkout_v1";

service CheckOut {
  rpc AddToCart(AddToCartRequest) returns (AddToCartResponse) {}
  rpc DeleteFromCart(DeleteFromCartRequest) returns (DeleteFromCartResponse) {}
  rpc ListCart(ListCartRequest) returns (ListCartResponse) {}
  rpc Order(OrderRequest) returns (OrderResponse) {}
}

message Item {
  uint32 sku = 1 [json_name = "sku"];
  uint32 count = 2 [json_name = "count"];
  string name = 3 [json_name = "name"];
  uint32 price = 4 [json_name = "price"];
}

message AddToCartRequest {
  uint64 user_id = 1
    [json_name = "user_id", (validate.rules).int64 = {not_in: [0]}];
  uint32 sku = 2 [json_name = "sku"];
  uint32 count = 3 [json_name = "count"];
}

message AddToCartResponse {
}

message DeleteFromCartRequest {
  uint64 user_id = 1
    [json_name = "user_id", (validate.rules).int64 = {not_in: [0]}];
  uint32 sku = 2 [json_name = "sku"];
  uint32 count = 3 [json_name = "count"];
}

message DeleteFromCartResponse {
}

message ListCartRequest {
  uint64 user_id = 1
    [json_name = "user_id", (validate.rules).int64 = {not_in: [0]}];
}

message ListCartResponse {
  repeated Item items = 1 [json_name = "items"];
  uint32 total_price = 2 [json_name = "totalPrice"];
}
  
message OrderRequest {
  uint64 user_id = 1
    [json_name = "user_id", (validate.rules).int64 = {not_in: [0]}];
}
  
message OrderResponse {
  uint64 order_id = 1 [json_name = "orderID"];
}
